<Window x:Class="Color_viewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Color_viewer"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"  x:Name="mainWin">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="1.2*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <CheckBox Margin="5" x:Name="alphaCheck" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            <TextBlock  Grid.Row="0" Grid.Column="1" Text="Alpha:" FontSize="18" TextAlignment="Right" VerticalAlignment="Center"/>
            <TextBox Text="{Binding Alpha}" x:Name="alphaText" Margin="5 0 5 0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="40" Grid.Column="2" Grid.Row="0"/>
            <Slider Minimum="0" Maximum="255"  TickFrequency="1" IsSnapToTickEnabled="True" Value="{Binding Alpha}" IsEnabled="{Binding ElementName=alphaCheck, Path=IsChecked}"  Grid.Row="0" Grid.Column="3" VerticalAlignment="Center"/>
            <Rectangle Grid.Column="4" Grid.Row="0" Grid.RowSpan="4" Width="30" Margin="5" Stroke="Black" StrokeThickness="1" Fill="{Binding MyBrush}"/>

            <CheckBox x:Name="redCheck" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            <TextBlock Grid.Row="1" Grid.Column="1" Text="Red:" FontSize="18" TextAlignment="Right" VerticalAlignment="Center"/>
            <TextBox Text="{Binding Red}" x:Name="redText"  Margin="5 0 5 0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="40" Grid.Column="2" Grid.Row="1"/>
            <Slider Minimum="0" Maximum="255"  TickFrequency="1" IsSnapToTickEnabled="True"  Grid.Row="1" Grid.Column="3" VerticalAlignment="Center" Value="{Binding Red}" IsEnabled="{Binding ElementName=redCheck, Path=IsChecked}"/>

            <CheckBox x:Name="greenCheck" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            <TextBlock  Grid.Row="2" Grid.Column="1" Text="Green:" FontSize="18" TextAlignment="Right" VerticalAlignment="Center"/>
            <TextBox Text="{Binding Green}" x:Name="greenText" Margin="5 0 5 0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="40" Grid.Column="2" Grid.Row="2"/>
            <Slider Minimum="0" Maximum="255"  TickFrequency="1" IsSnapToTickEnabled="True"  Grid.Row="2" Grid.Column="3" VerticalAlignment="Center" Value="{Binding Green}" IsEnabled="{Binding ElementName=greenCheck, Path=IsChecked}"/>

            <CheckBox x:Name="blueCheck" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            <TextBlock  Grid.Row="3" Grid.Column="1" Text="Blue:" FontSize="18" TextAlignment="Right" VerticalAlignment="Center"/>
            <TextBox Text="{Binding Blue}" x:Name="blueText" Margin="5 0 5 0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="40" Grid.Column="2" Grid.Row="3"/>
            <Slider Minimum="0" Maximum="255"  TickFrequency="1" IsSnapToTickEnabled="True" IsEnabled="{Binding ElementName=blueCheck, Path=IsChecked}" Value="{Binding Blue}" Grid.Row="3" Grid.Column="3" VerticalAlignment="Center"/>

            <Button Command="{Binding AddCommand}" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Margin="5" Background="Azure" Content="Add" Style="{DynamicResource ButtonStyle1}"/>
      
        </Grid>
        <ListBox x:Name="listB" ItemsSource="{Binding myBrushList}" Grid.Row="1" BorderBrush="LightGray" BorderThickness="1" Margin="5">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Width="70" Text="{Binding}"/>
                        <Rectangle Height="20" Width="200" Fill="{Binding}"/>
                        <Button DataContext="{Binding ElementName=mainWin, Path=DataContext}" Content="Delete"  Style="{StaticResource ButtonStyle1}" Command="{Binding DeleteCommand}" CommandParameter="{Binding ElementName=listB, Path=SelectedItem}"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
